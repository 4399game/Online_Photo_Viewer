"""
Django settings for VcrT project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

# Import
# here import python module

import os
import djcelery

# Import
# here import you module

from vcr_apps.vcr_conf import (vcrting, 
                               vcrting_email, vcrting_mail_name, vcrting_code_pwd,
)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '*)ududbv^cv%z#e3l1((9ayqxp78&@5%j79j!s#&#g5&nxii$k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# here is site app

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
VCR_APPS = [
    'haystack',
    'djcelery',

    'vcr_apps.web',
    'vcr_apps.user',
    'vcr_apps.option',
    'vcr_apps.kuukann',
]
INSTALLED_APPS += VCR_APPS

# Middleware
# here is site middleware

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
VCR_MIDDLEWARE = [
    'vcr_apps.web.middlewares.view.Method',
]
MIDDLEWARE = MIDDLEWARE + VCR_MIDDLEWARE

# Url
# here is site url

ROOT_URLCONF = 'VcrT.urls'

CORS_ORIGIN_ALLOW_ALL ='ALL'

CORS_ALLOW_METHODS =(
    'POST',    # 增
    'DELETE',  # 删
    'PUT',     # 改
    'GET',     # 查
)

# Template
# here is site templates

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(
                BASE_DIR, 'Template'
            ) ,
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

# Web
# here is site wsgi

WSGI_APPLICATION = 'VcrT.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static').replace('\\','/'),
]

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace('\\','/')

# Cache
# here is site cache

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': [
            '127.0.0.1:11211',
        ],
        'KEY_PREFIX': vcrting,
    }
}

# Session
# here is session conf

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

# Haystack
# here is haystack

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'vcr_extra', 'whoosh_index'),
        'INCLUDE_SPELLING': True,
    },
}
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 48

# Queue
# here is queue like celery
 
djcelery.setup_loader()

BROKER_URL = 'amqp://vcrting:ZT123zlt@localhost:5672/'

# CELERY_TIMEZONE = 'Asia/ShangHai'
CELERY_ENABLE_UTC = True
CELERY_IMPORTS = (
    'vcr_apps.option.vcr_task.del_station',
    'vcr_apps.option.vcr_task.add_station',
    
    'vcr_apps.web.vcr_task.img_task',
)
CELERY_MAX_TASKS_PER_CHILD = 100

# Email
# here is mail conf

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25

EMAIL_HOST_USER = vcrting_email
EMAIL_HOST_PASSWORD = vcrting_code_pwd
DEFAULT_FROM_EMAIL = vcrting_email